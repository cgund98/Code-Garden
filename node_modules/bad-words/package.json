{
  "_from": "bad-words",
  "_id": "bad-words@1.6.3",
  "_inBundle": false,
  "_integrity": "sha1-nufXYFE1Qncazh/ELL5SYVFIhuI=",
  "_location": "/bad-words",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "bad-words",
    "fetchSpec": "latest",
    "name": "bad-words",
    "raw": "bad-words",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/bad-words/-/bad-words-1.6.3.tgz",
  "_shasum": "9ee7d760513542771ace1fc42cbe5261514886e2",
  "_shrinkwrap": null,
  "_spec": "bad-words",
  "_where": "/home/callum/Coding/code-garden-angular",
  "author": {
    "name": "Mike P."
  },
  "bugs": {
    "url": "https://github.com/web-mech/badwords/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "badwords-list": "^1.0.0"
  },
  "deprecated": false,
  "description": "A javascript filter for bad words",
  "devDependencies": {
    "better-assert": "1.0.0",
    "documentation": "^5.3.3",
    "mocha": "1.14.0"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/web-mech/badwords#readme",
  "keywords": [
    "curse",
    "filter",
    "profanity",
    "words"
  ],
  "license": "MIT",
  "main": "./lib/badwords",
  "name": "bad-words",
  "optionalDependencies": {},
  "readme": "# bad-words\n\nA javascript filter for badwords\n\n[![Build Status](https://travis-ci.org/web-mech/badwords.svg?branch=master)](https://travis-ci.org/web-mech/badwords)\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat-square)](https://github.com/semantic-release/semantic-release)\n\n## Installation\n\n```\nnpm install bad-words\n```\n\n## Usage\n\n```js\nvar Filter = require('bad-words'),\n    filter = new Filter();\n\nconsole.log(filter.clean(\"Don't be an ash0le\")); //Don't be an ******\n```\n\n### Placeholder Overrides\n\n```js\nvar Filter = require('bad-words');\nvar customFilter = new Filter({ placeHolder: 'x'});\n\ncustomFilter.clean('Don't be an ash0le'); //Don't be an xxxxxx\n```\n\n### Regex Overrides\n\n```js\nvar filter = new Filter({ regex: /\\*|\\.|$/gi });\n\nvar filter = new Filter({ replaceRegex:  /[A-Za-z0-9가-힣_]/g }); \n//multilingual support for word filtering\n```\n\n### Add words to the blacklist\n\n```js\nvar filter = new Filter(); \n\nfilter.addWords(['some', 'bad', 'word']);\n\nfilter.clean(\"some bad word!\") //**** *** ****!\n\n//or\n\nvar filter = new Filter({ list: ['some', 'bad', 'word'] }); \n\nfilter.clean(\"some bad word!\") //**** *** ****!\n```\n\n### Instantiate with an empty list\n\n```js\nvar filter = new Filter({ emptyList: true }); \nfilter.clean('hell this wont clean anything'); //hell this wont clean anything\n```\n\n### Remove words from the blacklist\n\n```js\nvar filter = new Filter(); \n\nfilter.removeWords('hells');\n\nfilter.clean(\"some hells word!\"); //some hells word!\n```\n\n### API\n\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->\n\n#### Filter\n\nFilter constructor.\n\n**Parameters**\n\n-   `options` **[object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object)** Filter instance options\n    -   `options.emptyList` **[boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** Instantiate filter with no blacklist\n    -   `options.list` **[array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)** Instantiate filter with custom list\n    -   `options.placeHolder` **[string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)** Character used to replace profane words.\n    -   `options.regex` **[string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)** Regular expression used to sanitize words before comparing them to blacklist.\n    -   `options.replaceRegex` **[string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)** Regular expression used to replace profane words with placeHolder.\n\n##### isProfane\n\nDetermine if a string contains profane language.\n\n**Parameters**\n\n-   `string` **[string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)** String to evaluate for profanity.\n\n##### isProfaneLike\n\nDetermine if a single word is profane or looks profane.\n\n**Parameters**\n\n-   `word` **[string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)** String to evaluate for profanity.\n\n##### replaceWord\n\nReplace a word with placeHolder characters;\n\n**Parameters**\n\n-   `string` **[string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)** String to replace.\n\n##### clean\n\nEvaluate a string for profanity and return an edited version.\n\n**Parameters**\n\n-   `string` **[string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)** Sentence to filter.\n\n##### addWords\n\nAdd words to blacklist filter / remove words from whitelist filter\n\n**Parameters**\n\n-   `words`  \n\n##### removeWords\n\nAdd words to whitelist filter\n\n**Parameters**\n\n-   `word` **...[string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)** Word to add to whitelist.\n\n## Testing\n\n```\nnpm test\n```\n\n## Release Notes\n\n-   v1.1.0 / Mar 17 2015: Added soundex support for comparing words to things not in the list.\n-   v1.2.0 / May 29 2015: Removed soundex logic which resulted in many false positives within the isProfane test.\n-   v1.3.0 / Oct 1 2015: Updated local list and documentation. Added ability to pass a custom list of words during construction.\n-   v1.4.0 / Sept 2 2016: Added removeWords feature. Added emptyList configuration parameter.\n-   v1.4.1 / Sept 2 2016: Updated documentation.\n-   v1.4.3 / Jan 21 2017: Add multilingual support for word filtering\n-   v1.5.1 / April 14 2017: Patch for word tokenization.\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Michael Price\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/web-mech/badwords.git"
  },
  "scripts": {
    "docs": "documentation readme --section API ./lib/badwords.js",
    "test": "mocha -R spec"
  },
  "version": "1.6.3"
}
